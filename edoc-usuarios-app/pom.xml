<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>edoc-usuarios-app</groupId>
	<artifactId>edoc-usuarios-app</artifactId>
	<version>1.0.0</version>
	<packaging>jar</packaging>
	<name>edoc-usuarios-app</name>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.5.4</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<dependencies>
		<dependency>
			<!-- Setup Spring Boot -->
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<!-- JPA Data (Repositories, Entities, Hibernate, etc..) -->
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<!-- Starter for using Spring Security -->
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<!-- Make method based security testing easier -->
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- Automatically restart whenever files on the classpath change -->
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<!-- Use MySQL Connector-J -->
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.20</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<!-- Automated JSON API documentation for API's built with Spring -->
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.9.2</version>
		</dependency>
		<dependency>
			<!-- Generate beautiful documentation from a Swagger-compliant API. -->
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.9.2</version>
		</dependency>
		<dependency>
			<!-- JSON Web Token Support -->
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<version>0.9.1</version>
		</dependency>
		<dependency>
			<!-- Model Mapper -->
			<groupId>org.modelmapper</groupId>
			<artifactId>modelmapper</artifactId>
			<version>2.4.4</version>
		</dependency>










          <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
		    <groupId>io.rest-assured</groupId>
		    <artifactId>rest-assured</artifactId>
		    <scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>io.jsonwebtoken</groupId>
		    <artifactId>jjwt</artifactId>
		    <version>0.9.1</version>
		</dependency>


















		<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>2.17.0</version>
		</dependency>



		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!-- configure the manifest file -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<mainClass>
								com.porto.ressarcimento.carga.recupera.App</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>

			<!-- configure the manifest file -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<mainClass>
								edoc.usuarios.App</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			


			<!-- code coverage jacoco -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.5</version>
				<executions>

					<execution>
						<id>pre-unit-test</id>
						<phase>test-compile</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<propertyName>surefireJacocoAgent</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>pre-integration-test</id>
						<phase>test-compile</phase>
						<goals>
							<goal>prepare-agent-integration</goal>
						</goals>
						<configuration>
							<propertyName>failsafeJacocoAgent</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>post-unit-test</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>post-integration-test</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report-integration</goal>
						</goals>
					</execution>
				</executions>

				<configuration>
					<excludes>
						<exclude>**/builder/**</exclude>
						<exclude>**/exceptions/**</exclude>
						<exclude>**/model/**</exclude>
						<exclude>**/api/**</exclude>
						<exclude>**/constantes/**</exclude>
						<exclude>**/enums/** </exclude>
						<exclude>!**/src/main/**/build/</exclude>
					</excludes>
				</configuration>

			</plugin>

			<!-- generating code -->
			<plugin>
				<groupId>io.swagger</groupId>
				<artifactId>swagger-codegen-maven-plugin</artifactId>
				<version>2.4.8</version>
				<executions>
<!-- 					<execution> -->
<!-- 						<id>usuarios</id> -->
<!-- 						<goals> -->
<!-- 							<goal>generate</goal> -->
<!-- 						</goals> -->
<!-- 						<configuration> -->
<!-- 							<inputSpec> -->
<!-- 								${basedir}/src/main/resources/api/servicedescriptors/expostos/UsuariosApiV1-0.yaml</inputSpec> -->
<!-- 							<language>spring</language> -->
<!-- 							<apiPackage> -->
<!-- 								edoc.usuarios.api</apiPackage> -->
<!-- 							<modelPackage> -->
<!-- 								edoc.usuarios.api.model</modelPackage> -->
<!-- 							<generateSupportingFiles>false</generateSupportingFiles> -->
<!-- 							<configOptions> -->
<!-- 								<serializableModel>true</serializableModel> -->
<!-- 								<dateLibrary>joda</dateLibrary> -->
<!-- 							</configOptions> -->
<!-- 						</configuration> -->
<!-- 					</execution> -->
					<execution>
						<id>autenticacao</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>
								${basedir}/src/main/resources/api/servicedescriptors/expostos/AutenticacaoApiV1-0.yaml</inputSpec>
							<language>spring</language>
							<apiPackage>
								edoc.usuarios.autenticacao.api</apiPackage>
							<modelPackage>
								edoc.usuarios.autenticacao.api.model</modelPackage>
							<generateSupportingFiles>false</generateSupportingFiles>
							<configOptions>
								<serializableModel>true</serializableModel>
								<dateLibrary>joda</dateLibrary>
							</configOptions>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Getting the jar -->
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<phase>initialize</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<!-- removing undesired generated files -->
					<execution>
						<phase>process-resources</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<echo
									message="Removing undesired swagger files..." />
								<delete>
									<fileset
										dir="${project.build.directory}/generated-sources/swagger"
										includes="**/*Controller.java" />
								</delete>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- attaching hibernate files and swagger files -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>
									${project.build.directory}/generated-sources/swagger/src/main/java/</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- configure the manifest file -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<mainClass>
								com.porto.ressarcimento.carga.recupera.App</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<!-- SONAR -->
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>3.6.0.1398</version>
			</plugin>

		</plugins>
		<pluginManagement>
			<plugins>
				<!-- Running unit tests -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<configuration>
						<reportsDirectory>
							${project.build.directory}/surefire-reports</reportsDirectory>
						<argLine>${surefireJacocoAgent}</argLine>
					</configuration>
				</plugin>

				<!-- integration tests -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<executions>
						<execution>
							<id>maven-failsafe-plugin</id>
							<phase>prepare-package</phase>
							<goals>
								<goal>integration-test</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<reportsDirectory>
							${project.build.directory}/failsafe-reports</reportsDirectory>
						<argLine>${failsafeJacocoAgent}</argLine>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>

								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-antrun-plugin
										</artifactId>
										<versionRange>
											[1.8,)
										</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>

								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>io.swagger</groupId>
										<artifactId>
											swagger-codegen-maven-plugin
										</artifactId>
										<versionRange>
											[2R.2.3,)
										</versionRange>
										<goals>
											<goal>generate</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>

								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>
											[3.1.1,)
										</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
											<goal>unpack</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>

							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>

				<!-- packaging spring boot -->
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
				</plugin>
				<!-- SONAR -->
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>3.6.0.1398</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>


</project>
